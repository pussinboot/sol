//@author: idwyr
//@help: transition
//@tags: texture
//@credits: glsl.io

Texture2D from, to;
float progress;
float smoothness = 0.8;
float2 size = 15;


SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};

float rand (float2 co) {
  return frac(sin(dot(co.xy ,float2(12.9898,78.233))) * 43758.5453);
}


float4 PS(psInput input) : SV_Target
{	float2 p = input.uv;
	float4 c = float4(0,0,0,1);
	float r = rand(floor(float2(size) * p));
  	float m = smoothstep(0.0, -smoothness, r - (progress * (1.0 + smoothness)));
 	c = lerp(from.Sample(linearSampler,p), to.Sample(linearSampler,p), m);
	
	return c;
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



